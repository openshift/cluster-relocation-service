apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "relocation.openshift.io/v1alpha1",
          "kind": "ClusterConfig",
          "metadata": {
            "name": "clusterconfig"
          },
          "spec": {
            "domain": "thing.example.com",
            "sshKeys": [
              "ssh-rsa sshkeyhere foo@example.com"
            ]
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2024-01-08T16:01:29Z"
    operators.operatorframework.io/builder: operator-sdk-v1.30.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: cluster-relocation-service.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ClusterConfig is the Schema for the clusterconfigs API
      displayName: Cluster Config
      kind: ClusterConfig
      name: clusterconfigs.relocation.openshift.io
      version: v1alpha1
  description: Manages relocation and install of Single Node OpenShift clusters using
    an Image-Based Install strategy.
  displayName: Cluster Relocation Service
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - metal3.io
          resources:
          - baremetalhosts
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - relocation.openshift.io
          resources:
          - clusterconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - relocation.openshift.io
          resources:
          - clusterconfigs/finalizers
          verbs:
          - update
        - apiGroups:
          - relocation.openshift.io
          resources:
          - clusterconfigs/status
          verbs:
          - get
          - patch
          - update
        serviceAccountName: controller-manager
      deployments:
      - label:
          app: cluster-relocation
        name: cluster-relocation-service
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: cluster-relocation
          strategy: {}
          template:
            metadata:
              labels:
                app: cluster-relocation
            spec:
              containers:
              - args:
                - --leader-elect
                command:
                - /manager
                env:
                - name: SERVICE_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: SERVICE_NAME
                  value: cluster-relocation-config
                - name: SERVICE_PORT
                  value: "8000"
                - name: SERVICE_SCHEME
                  value: https
                image: controller:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                volumeMounts:
                - mountPath: /data
                  name: data
                - mountPath: /webhook-certs
                  name: webhook-certs
              - command:
                - /server
                env:
                - name: HTTPS_KEY_FILE
                  value: /certs/tls.key
                - name: HTTPS_CERT_FILE
                  value: /certs/tls.crt
                - name: PORT
                  value: "8000"
                image: controller:latest
                name: server
                ports:
                - containerPort: 8000
                  name: config-server
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                volumeMounts:
                - mountPath: /data
                  name: data
                - mountPath: /certs
                  name: certs
              securityContext:
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - emptyDir: {}
                name: data
              - name: certs
                secret:
                  secretName: cluster-relocation-server
              - name: webhook-certs
                secret:
                  secretName: webhook-certs
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Installer
  - OpenShift
  links:
  - name: Cluster Relocation Service
    url: https://cluster-relocation-service.domain
  maintainers:
  - email: ncarboni@redhat.com
    name: Nicholas Carboni
  maturity: alpha
  provider:
    name: Red Hat
  version: 0.0.1
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: cluster-relocation-service
    failurePolicy: Fail
    generateName: clusterconfigs.relocation.openshift.io
    rules:
    - apiGroups:
      - relocation.openshift.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - clusterconfigs
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-relocation-openshift-io-v1alpha1-clusterconfig
